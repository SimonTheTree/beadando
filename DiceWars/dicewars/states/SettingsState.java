/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dicewars.states;

import dicewars.Main1;
import dicewars.Settings;
import gameTools.map.generators.MapGenerator;
import gameTools.state.State;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
/**
 *  ebben a grafikus menüben lehet felkalibrálni a játéot
 * @author ganter
 */
public class SettingsState extends State {

    private ArrayList<PlayerEntry> pe_s = new ArrayList();
    
    public void addPlayer(String type){
        PlayerEntry pe = new PlayerEntry(this, type);
        pe_s.add(pe);
        panePlayers.add(pe);
        for(PlayerEntry p : pe_s){
            p.setBounds(5, p.getPlayer().getId()*40, Settings.SCREEN_WIDTH-200, 35);
            p.refresh();
        }
        panePlayers.revalidate();
        panePlayers.repaint();
    }
    public void removePlayer(int id){
        for(PlayerEntry p : pe_s){
            if(p.getPlayer().getId() == id){
                panePlayers.remove(p);
                pe_s.remove(p);
                p.getPlayer().dispose();
                break;
            }
        }
        for(PlayerEntry p : pe_s){
            p.setBounds(5, p.getPlayer().getId()*40, Settings.SCREEN_WIDTH-200, 35);
            p.refresh();
        }
        panePlayers.revalidate();
        panePlayers.repaint();

    }
    
    /**
     * Creates new form NewJPanel
     */
    public SettingsState() {
        super("SettingsState", Settings.SCREEN_WIDTH, Settings.SCREEN_HEIGHT);
        initComponents();
        addPlayer("Human");
        addPlayer("AI");
        inputManager.addKeyMapping("ESC", KeyEvent.VK_ESCAPE);
        inputManager.addKeyMapping("Add", KeyEvent.VK_A);
        maxTps=5;
        maxFps=30;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        panePlayers = new javax.swing.JPanel();
        lblMapOptions = new javax.swing.JLabel();
        lblMapShape = new javax.swing.JLabel();
        cBoxMapShape = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();
        btnAddPlayer = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblPlayerTeam = new javax.swing.JLabel();
        lblPlayerColor = new javax.swing.JLabel();
        lblPlayerType = new javax.swing.JLabel();
        lblPlayerID = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dim2Slider = new javax.swing.JSlider();
        di1Slider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TppSlider = new javax.swing.JSlider();
        jLabelTPP = new javax.swing.JLabel();
        jLabelDim1 = new javax.swing.JLabel();
        jLabelDim2 = new javax.swing.JLabel();

        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        panePlayers.setLayout(null);
        jScrollPane1.setViewportView(panePlayers);

        lblMapOptions.setText("Map options:");

        lblMapShape.setText("Map shape:");

        cBoxMapShape.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnBack.setText("Done");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAddPlayer.setText("Add Player");
        btnAddPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPlayerActionPerformed(evt);
            }
        });

        lblPlayerTeam.setText("Team");

        lblPlayerColor.setText("Color");

        lblPlayerType.setText("Human/AI");

        lblPlayerID.setText("Player #");

        jLabel1.setText("DEL");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(lblPlayerID)
                .addGap(18, 18, 18)
                .addComponent(lblPlayerType)
                .addGap(52, 52, 52)
                .addComponent(lblPlayerColor)
                .addGap(44, 44, 44)
                .addComponent(lblPlayerTeam)
                .addContainerGap(320, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlayerType)
                    .addComponent(lblPlayerColor)
                    .addComponent(lblPlayerTeam)
                    .addComponent(jLabel1)
                    .addComponent(lblPlayerID))
                .addGap(2, 2, 2))
        );

        jLabel2.setText("Dim2");

        dim2Slider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                dim2SliderMouseDragged(evt);
            }
        });

        di1Slider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                di1SliderMouseDragged(evt);
            }
        });

        jLabel3.setText("Dim1");

        jLabel4.setText("Territories/player: ");

        TppSlider.setMajorTickSpacing(1);
        TppSlider.setMaximum(20);
        TppSlider.setValue(7);
        TppSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                TppSliderMouseDragged(evt);
            }
        });

        jLabelTPP.setText("7");

        jLabelDim1.setText("50");

        jLabelDim2.setText("50");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMapOptions)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMapShape)
                                .addGap(18, 18, 18)
                                .addComponent(cBoxMapShape, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(194, 194, 194)))
                        .addComponent(btnAddPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(di1Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelDim1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TppSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dim2Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelTPP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelDim2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMapOptions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMapShape)
                            .addComponent(cBoxMapShape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnAddPlayer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(di1Slider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelDim1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dim2Slider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelDim2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TppSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelTPP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnBack))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPlayerActionPerformed
        addPlayer("Human");
    }//GEN-LAST:event_btnAddPlayerActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        Main1.getInstance().setState("MenuState");
    }//GEN-LAST:event_btnBackActionPerformed

    private void di1SliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_di1SliderMouseDragged
        Settings.setMapParamX(di1Slider.getValue());
        jLabelDim1.setText(""+di1Slider.getValue());
    }//GEN-LAST:event_di1SliderMouseDragged

    private void dim2SliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dim2SliderMouseDragged
        Settings.setMapParamY(dim2Slider.getValue());
        jLabelDim2.setText(""+dim2Slider.getValue());
    }//GEN-LAST:event_dim2SliderMouseDragged

    private void TppSliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TppSliderMouseDragged
        Settings.TerrPerPlayer = TppSlider.getValue();
        jLabelTPP.setText(""+TppSlider.getValue());
    }//GEN-LAST:event_TppSliderMouseDragged

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        cBoxMapShape.setModel(new DefaultComboBoxModel<String>() {
            MapGenerator[] gens = Settings.getMapGenerators();
            int sel;
            @Override
            public void setSelectedItem(Object anItem){
                String val = (String) anItem;
                for(int i = 0; i < gens.length; i++){
                    if(val.equals(gens[i].name) ){
                        sel=i;                       
                        Settings.setMapGenerator(val);
                    }
                }
            }

            @Override
            public Object getSelectedItem() {
                return gens[sel].name;
            }

            @Override
            public int getSize() {
                return gens.length;
            }

            @Override
            public String getElementAt(int i) {
                return gens[i].name;
            }
        });
    }//GEN-LAST:event_formFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider TppSlider;
    private javax.swing.JButton btnAddPlayer;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> cBoxMapShape;
    private javax.swing.JSlider di1Slider;
    private javax.swing.JSlider dim2Slider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelDim1;
    private javax.swing.JLabel jLabelDim2;
    private javax.swing.JLabel jLabelTPP;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMapOptions;
    private javax.swing.JLabel lblMapShape;
    private javax.swing.JLabel lblPlayerColor;
    private javax.swing.JLabel lblPlayerID;
    private javax.swing.JLabel lblPlayerTeam;
    private javax.swing.JLabel lblPlayerType;
    private javax.swing.JPanel panePlayers;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(State s) {
        if (inputManager.isKeyTyped("ESC")){
            btnBackActionPerformed(null);
        }
        if (inputManager.isKeyTyped("Add")){
            btnAddPlayerActionPerformed(null);
        }
    }

    @Override
    public void render() {
        g.setColor(Color.white);
        g.fillRect(0,0,Settings.SCREEN_WIDTH, Settings.SCREEN_HEIGHT);
    }
}
